for(i in 1:s) {
diag(M[-(1:i),]) <- 1/s
}
M <- M + t(M); M
}
spatial.matrix(10, 2)
spatial.matrix(5, 2)
spatial.matrix(8, 2)
spatial.matrix(8, 1)
spatial.matrix(8, 1)
spatial.matrix(8, 2)
1^(-39)
0.1^(-39)
10^(-39)
10^(-40)
10^(-60)
10^(-100)
10^(-10000)
10^(-100)
10^(-1000)
1^(-1000)
1.1^(-1000)
10^(-1000)
1.1^(-10009)
Rcpp::sourceCpp('Desktop/Paper/Code/armadillotest.cpp')
test(10)
Rcpp::sourceCpp('Desktop/Paper/Code/armadillotest.cpp')
test(10)
Rcpp::sourceCpp('Desktop/Paper/Code/armadillotest.cpp')
test(10)
Rcpp::sourceCpp('Desktop/rccptest.cpp')
DHHS_boot <- function(B,N,n,Theta,tau,r,s) {
o <- wildbootstrap(B,N,n,Theta,tau,r,s)
p1 <- o$HS$stat < -1.72
p2 <- o$DH$stat < -1.65
return(
c("HS"=p1, "DH"=p2)
)
}
rowMeans(replicate(5000, DHHS_boot(499,10,100,0.8,0.8,3, s = TRUE)))
rowMeans(replicate(5000, DHHS_boot(499,10,100,0.8,0.2,1/3, s = FALSE)))
Simes <- function(pvals, alpha = 0.05) {
pvals <- sort(pvals)
n <- length(pvals)
return(
sum(sapply(seq_along(pvals), function(j) ifelse(pvals[j] < j*alpha/n, 1, 0))) > 0
)
}
S_DHHS_boot <- function(B,N,n,Theta,tau,r,s) {
o <- wildbootstrap(B,N,n,Theta,tau,r,s)
p1 <- mean(o$HS$Bootstrapped < o$HS$stat)
p2 <- mean(o$DH$Bootstrapped < o$DH$stat)
return(
Simes(c(p1, p2))
)
}
mean(replicate(5000, S_DHHS_boot(499,10,100,0.8,0.2,1/3, s = TRUE)))
mean(replicate(5000, S_DHHS_boot(4999,10,100,0.8,0.2,1/3, s = TRUE)))
mean(replicate(5000, S_DHHS_boot(999,10,100,0,0.2,1, s = TRUE)))
install.packages("harmonicmeanp")
?harmonicmeanp
??harmonicmeanp
rbeta(1000,1/1.5,1)
hist(rbeta(1000,1/1.5,1))
load("/Users/Martin/Dropbox/EidÖ_Übung_1819/Klausur HT/Airq.Rdata")
?harmonicmeanp::p.hmp
HMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
p.hmp(c(p1,p2)) < 0.5
)
}
Rcpp::sourceCpp('Desktop/rccptest.cpp')
mean(replicate(1000, S_DHHS(10,100,0.2,1/3, s = T)))
mean(replicate(1000, HMP_DHHS(10,100,0.2,1/3, s = T)))
mean(replicate(1000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
library(harmonicmeanp)
mean(replicate(1000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
mean(replicate(25000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
S_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
Simes(c(p1, p2))
)
}
Simes <- function(pvals, alpha = 0.05) {
pvals <- sort(pvals)
n <- length(pvals)
return(
sum(sapply(seq_along(pvals), function(j) ifelse(pvals[j] < j*alpha/n, 1, 0))) > 0
)
}
mean(replicate(25000, S_DHHS(10,100,0.8,0.2,1/3, s = T)))
p.hmp(c(0.5,0.5))
p.hmp(c(0.51,0.551))
p.hmp(c(0.51,0.51))
p.hmp
hmp.stat()
?hmp.stat
hmp.stat(c(0.5,0.5))
HMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
p.stat(c(p1,p2)) < 0.5
)
}
mean(replicate(5000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
source('~/Desktop/Paper/Code/wildbootstrap.R')
HMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
hmp.stat(c(p1,p2)) < 0.5
)
}
mean(replicate(5000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
HMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
hmp.stat(c(p1,p2)) < 0.05
)
}
mean(replicate(5000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
mean(replicate(25000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
HMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
p.hmp(c(p1,p2)) < 0.05
)
}
mean(replicate(25000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
mean(replicate(25000, HMP_DHHS(10,100,0.8,0.2,0.1, s = T)))
mean(replicate(25000, HMP_DHHS(10,100,0.8,0.2,0.1, s = T)))
HMP_DHHS_boot <- function(B,N,n,Theta,tau,r,s) {
o <- wildbootstrap(B,N,n,Theta,tau,r,s)
p1 <- mean(o$HS$Bootstrapped < o$HS$stat)
p2 <- mean(o$DH$Bootstrapped < o$DH$stat)
return(
p.hmp(c(p1, p2)) < 0.05
)
}
mean(replicate(100, HMP_DHHS_boot(499,10,100,0.8,0.2,0.1, s = T)))
HMP_DHHS_boot(100,10,100,0.8,0.2,0.1,s=T)
Rcpp::sourceCpp('Desktop/rccptest.cpp')
HMP_DHHS_boot <- function(B,N,n,Theta,tau,r,s) {
o <- wildbootstrap(B,N,n,Theta,tau,r,s)
p1 <- mean(o$HS$Bootstrapped < o$HS$stat)
p2 <- mean(o$DH$Bootstrapped < o$DH$stat)
return(
p.hmp(c(p1, p2)) < 0.05
)
}
mean(replicate(100, HMP_DHHS_boot(499,10,100,0.8,0.2,0.1, s = T)))
mean(replicate(1000, HMP_DHHS_boot(499,10,100,0.8,0.2,0.1, s = T)))
mean(replicate(1000, HMP_DHHS_boot(499,10,100,0.8,0.2,0.1, s = T)))
HMP_DHHS_boot <- function(B,N,n,Theta,tau,r,s) {
o <- wildbootstrap(B,N,n,Theta,tau,r,s)
p1 <- mean(o$HS$Bootstrapped < o$HS$stat)
p2 <- mean(o$DH$Bootstrapped < o$DH$stat)
return(
hmp.stat(c(p1, p2)) < 0.05
)
}
mean(replicate(1000, HMP_DHHS_boot(499,10,100,0.8,0.2,0.1, s = T)))
mean(replicate(5000, HMP_DHHS_boot(499,10,100,0.8,0.2,0.1, s = T)))
mean(replicate(5000, HMP_DHHS_boot(999,10,100,0.8,0.2,0.1, s = T)))
mean(replicate(5000, HMP_DHHS_boot(999,10,100,0,0.2,1, s = T)))
mean(replicate(5000, HMP_DHHS_boot(999,50,100,0.8,0.8,3, s = T)))
mean(replicate(5000, HMP_DHHS_boot(999,50,100,0.8,0.8,3, s = T)))
mean(replicate(25000, HMP_DHHS_boot(999,50,100,0.8,0.8,3, s = T)))
mean(replicate(5000, HMP_DHHS_boot(999,50,100,0,0.8,1, s = T)))
HMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
p.hmp(c(p1,p2)) < 0.05
)
}
mean(replicate(25000, HMP_DHHS(10,100,0.8,0.8,3, s = T)))
mean(replicate(25000, HMP_DHHS(10,50,0.8,0.8,3, s = T)))
mean(replicate(25000, HMP_DHHS(10,50,0.8,0.8,3, s = T)))
mean(replicate(25000, HMP_DHHS(10,50,0.8,0.8,3, s = T)))
mean(replicate(25000, HMP_DHHS(10,50,0.8,0.8,3, s = T)))
mean(replicate(50000, HMP_DHHS(10,50,0.8,0.8,3, s = T)))
mean(replicate(50000, HMP_DHHS(10,50,0.8,0.8,3, s = F)))
mean(replicate(50000, S_DHHS(10,50,0.8,0.8,3, s = F)))
mean(replicate(50000, S_DHHS(10,100,0.8,0.8,3, s = F)))
mean(replicate(50000, S_DHHS(10,100,0,0.8,3, s = F)))
mean(replicate(50000, S_DHHS(10,100,0,0.8,3, s = F)))
mean(replicate(5000, S_DHHS(10,100,0,0.8,3, s = F)))
mean(replicate(5000, HMP_DHHS(10,100,0,0.8,3, s = F)))
mean(replicate(2000, HMP_DHHS(10,100,0,0.8,3, s = F)))
mean(replicate(50000, HMP_DHHS(10,100,0,0.8,3, s = F)))
mean(replicate(50000, HMP_DHHS(10,25,0,0.8,3, s = F)))
mean(replicate(50000, HMP_DHHS(10,25,0,0.8,3, s = F)))
mean(replicate(50000, HMP_DHHS(10,25,0,0.8,3, s = T)))
mean(replicate(50000, S_DHHS(10,25,0,0.8,3, s = T)))
mean(replicate(50000, HMP_DHHS(10,25,0.8,0.8,3, s = T)))
mean(replicate(50000, HMP_DHHS(10,50,0.8,0.8,3, s = T)))
mean(replicate(50000, HMP_DHHS(10,250,0.8,0.8,3, s = T)))
mean(replicate(50000, HMP_DHHS(50,250,0.8,0.8,3, s = T)))
mean(replicate(50000, HMP_DHHS(50,250,0.8,0.8,3, s = F)))
install.packages("actura")
install.packages("actuar")
library(actuar)
curve(dlgamma(x,1,1), from = c(0,10))
curve(dlgamma(x,1,1), from = c(0,100))
curve(dlgamma(x,1,1), from = c(0,100), log = T)
curve(dlgamma(x,1,1, log = F), from = c(0,100))
curve(dlgamma(x,1,1, log = T), from = c(0,100))
curve(dlgamma(x,1,1))
curve(dlgamma(x,1,1), from = 0, to = 10)
curve(dchisq(x,2), from = 0, to = 10, add = T, col = "red")
drlgamma(100,1,1)
rlgamma(100,1,1)
2*log(rlgamma(1000,1,1))
density(2*log(rlgamma(1000,1,1)))
plot(density(2*log(rlgamma(1000,1,1))))
plot(density(2*log(rlgamma(10000,1,1))))
plot(density(2*log(rlgamma(10000,1,1))));curve(dchisq(x,2), from = 0, to = 25)
plot(density(2*log(rlgamma(10000,1,1))));curve(dchisq(x,2), from = 0, to = 25, add = T, col = "red")
plot(density(2*rgamma(10000,1,1/2)));curve(rlgamma(x,1,1), from = 0, to = 25, add = T, col = "red")
plot(density(2*rgamma(10000,1,1/2)));curve(dlgamma(x,1,1), from = 0, to = 25, add = T, col = "red")
L <- function(x) {x^2*(1-x)}
curve(L(x), from = 0, to =1)
rm(L)
mean(replicate(5000, HMP_DHHS(10,100,0.2,1/3, s = T)))
mean(replicate(5000, HMP_DHHS(10,100,0,0.2,1/3, s = T)))
mean(replicate(5000, HMP_DHHS(10,100,0,0.2,1/3, s = T)))
mean(replicate(25000, HMP_DHHS(10,100,0,0.2,1/3, s = T)))
mean(replicate(25000, HMP_DHHS(10,100,0,0.2,1/3, s = T)))
mean(replicate(5000, HMP_DHHS(10,100,0,0.2,1/3, s = T)))
mean(replicate(50000, HMP_DHHS(10,100,0,0.2,1/3, s = T)))
mean(replicate(50000, HMP_DHHS(10,100,0,0.2,1/3, s = T)))
mean(replicate(50000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
mean(replicate(50000, S_DHHS(10,100,0.8,0.2,1/3, s = T)))
mean(replicate(5000, DH(panel(10, 100, 0.8, 0.2, 1/3))) < qnorm(0.05))
mean(replicate(5000, DH(panel(10, 100, 0.8, 0.2, 1/3, s = T))) < qnorm(0.05))
mean(replicate(50000, DH(panel(10, 100, 0.8, 0.2, 1/3, s = T))) < qnorm(0.05))
mean(replicate(50000, DH(panel(10, 50, 0.8, 0.2, 1/3, s = T))) < qnorm(0.05))
mean(replicate(5000, DH(panel(10, 50, 0.8, 0.2, 1/3, s = T))) < qnorm(0.05))
mean(replicate(5000, DH(panel(10, 50, 0.8, 0.2, 1/3, s = T))) < qnorm(0.05))
mean(replicate(5000, DH(panel(10, 10, 0.8, 0.2, 1/3, s = T))) < qnorm(0.05))
log(2)/(1-log(2))
?mean
GMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
sqrt(p1 * p2)*exp(1) < 0.05
)
}
mean(replicate(50000, GMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
GMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
sqrt(p1 * p2) < 0.05
)
}
mean(replicate(50000, GMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
mean(replicate(50000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
ln(2)
log(2)
GMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
sqrt(p1 * p2)*exp(1) < 0.05
)
}
mean(replicate(50000, GMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
mean(replicate(50000, GMP_DHHS(10,100,0,0.2,1/3, s = T)))
exp(1)*ln(2)
exp(1)*log(2)
0.7357589*exp(1)
exp(1)
GMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
sqrt(p1 * p2)*2 < 0.05
)
}
mean(replicate(50000, GMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
BF_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
2*min(c(p1,p2)) < 0.05
)
}
mean(replicate(5000, BF_DHHS(10,100,0.8,0.2,1/3, s = T)))
mean(replicate(50000, BF_DHHS(10,100,0.8,0.2,1/3, s = T)))
log(10)
(1.980287+10)^2/((1.980287+1)*10)
AM_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
2*mean(c(p1,p2)) < 0.05
)
}
mean(replicate(5000, AM_DHHS(10,100,0.8,0.2,1/3, s = T)))
mean(replicate(50000, AM_DHHS(10,100,0.8,0.2,1/3, s = T)))
HMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
#p.hmp(c(p1,p2)) < 0.05
2/(1/p1 + 1/p2) < 0.5
)
}
mean(replicate(50000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
HMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
#p.hmp(c(p1,p2)) < 0.05
2/(1/p1 + 1/p2) < 0.05
)
}
mean(replicate(50000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
library(harmonicmeanp)
hmp.stat
HMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
#p.hmp(c(p1,p2)) < 0.05
1/(1/p1 + 1/p2) < 0.05
)
}
mean(replicate(50000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
p.hmp
HMP_DHHS <- function(N,n,Theta,tau,r,s) {
dat <- panel(N, n, Theta, tau, r, s)
p1 <- pnorm(HS(dat))
p2 <- pnorm(DH(dat))
return(
p.hmp(c(p1,p2)) < 0.05
#1/(1/p1 + 1/p2) < 0.05
)
}
mean(replicate(50000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
mean(replicate(50000, HMP_DHHS(10,100,0.8,0.2,1/3, s = T)))
?digamma()
?p.hmp
?p.mamml
?p.hmp
p.hmp
1 + digamma(1) - log(2/pi)
?pEstable
mean(replicate(50000, HMP_DHHS(10,100,0,0.2,1, s = T)))
exp(log(6))
blogdown::update_hugo()
library()
library("blogdown")
blogdown::new_site(theme = "saey55/hugo-elate-theme")
setwd("~/sciebo/WebEcon")
blogdown::new_site(theme = "saey55/hugo-elate-theme")
??blogdown::hugo_build
setwd("~/Desktop/Blogtest")
?blogdown::new_site
blogdown::new_site(theme = "UtkarshVerma/startbootstrap-clean-blog")
blogdown::install_hugo()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
servr::daemon_stop("140473463322232")
source('~/WebEcon/buildsite.R')
blogdown::build_site()
setwd("blog")
blogdown::build_site()
blogdown::build_site()
setwd("~/WebEcon")
#setwd("../")
blogdown::build_site()
#setwd("../")
blogdown::build_site()
source('~/WebEcon/buildsite.R')
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
setwd("~/WebEcon/blog")
blogdown::build_site()
setwd("~/Desktop/blog")
blogdown::build_site()
setwd("~/Desktop/WebEcon/blog/")
blogdown::build_site()
setwd("../")
install.packages("ISLR")
library(ISLE)
library(ISLR)
?read_xl
??read_xl
?ead_xlsx
??read_xlsx
library(readxl)
blogdown::serve_site()
seq(1,10,0.01)
seq(1,10,0.01)
plot(seq(1,10,0.01))
seq(1,10,0.01)
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize", paste0("\\", options$size,"\n\n", x, "\n\n \\normalsize"), x)
})
knitr::opts_chunk$set(echo = TRUE, eval = F, size='small')
# attach package 'MASS' and read in the data
library(MASS)
library(ggplot2)
data(iris)
l <- list()
llllll <- list()
